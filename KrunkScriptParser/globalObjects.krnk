void GAME.ADMIN.ban(str playerID) 
void GAME.ADMIN.kick(str playerID) 
void GAME.ADS.playVideo()
obj[] GAME.AI.list() 
void GAME.AI.remove(str sid) 
obj GAME.AI.spawn(str aid, str name, num x, num y, num z, obj? data) 
void GAME.ANIM.playClip(obj object, str clipID, num reps)
void GAME.ANIM.stopClip(obj object, str clipID)
void GAME.CAMERA.attach()
void GAME.CAMERA.detach()
num GAME.CAMERA.envZone
void GAME.CAMERA.fov(num val)
obj GAME.CAMERA.getObj()
void GAME.CAMERA.lookAt(num x, num y, num z)
void GAME.CAMERA.move(num x, num y, num z)
num GAME.CAMERA.position.x
num GAME.CAMERA.position.y
num GAME.CAMERA.position.z
void GAME.CAMERA.rotate(num x, num y, num z)
num GAME.CAMERA.rotation.x
num GAME.CAMERA.rotation.y
num GAME.CAMERA.rotation.z
void GAME.CAMERA.shake(num amnt)
void GAME.CHAT.send(str playerID, str message, str color)
bool GAME.COOKIES.has(str key) 
str GAME.COOKIES.load(str key) 
void GAME.COOKIES.remove(strkey) 
void GAME.COOKIES.save(str key, str val) 
void GAME.DEFAULT.disable3D()
void GAME.DEFAULT.disablePlayerBehaviour()
void GAME.DEFAULT.disablePrediction()
void GAME.DEFAULT.disableSync()
void GAME.INPUTS.disableDefault()
void GAME.INPUTS.enableDefault()
void GAME.INPUTS.freeMouse()
bool GAME.INPUTS.keyDown(num keyCode)
void GAME.INPUTS.lockMouse()
obj GAME.INPUTS.mouseMovement()
obj GAME.INPUTS.mousePos()
obj GAME.INPUTS.mousePosOverlay()
void GAME.INPUTS.unlockMouse()
void GAME.MODS.load(str url)
void GAME.MODS.reset()
bool GAME.NETWORK.broadcast(str id, str data) 
bool GAME.NETWORK.send(str id, str data, str playerID)
obj[] GAME.OBJECTS.getPathNodes()
void GAME.OVERLAY.clear() 
void GAME.OVERLAY.drawCircle(num x, num y, num w, num h, num r, color, num opac, bool center) 
void GAME.OVERLAY.drawImage(str aid, num x, num y, num w, num h, num r, num opac) 
void GAME.OVERLAY.drawLine(num x1, num y1, num x2, num y2, num thickness, str color, num opac) 
void GAME.OVERLAY.drawRect(num x, num y, num w, num h, num r, str color, num opac, bool center) 
void GAME.OVERLAY.drawText(str text, num x, num y, num r, num size, str align, str color, num opac) 
obj GAME.OVERLAY.getSize() 
num GAME.OVERLAY.measureText(num size, text) 
obj GAME.OVERLAY.offset(num x, num y) 
void GAME.OVERLAY.scale(num scl) 
void GAME.PAYMENTS.charge() 
void GAME.PAYMENTS.giveKR(str player, num val) 
bool GAME.PLATFORM.isBrowser() 
bool GAME.PLATFORM.() 
bool GAME.PLATFORM.isMobile() 
void GAME.PLAYERS.disableMeshes()
obj GAME.PLAYERS.findByID(str id)
obj GAME.PLAYERS.getSelf()
obj[] GAME.PLAYERS.list()
void GAME.PLAYERS.toggleLOD(num val)
obj GAME.SCENE.addAsset(str aid, num x, num y, num z, num scl, str colr, obj? data)
obj GAME.SCENE.addCube(str aid, str colr, num x, num y, num z, num w, num h, num l, obj? data)
obj GAME.SCENE.addCustom(str aid, str colr, num[] verts, num x, num y, num z, num w, num h, num l, obj? data)
obj GAME.SCENE.addDirLight(str colr, num x, num y, num z, num tx, num ty, num tz, num intensity, bool castShadow)
obj GAME.SCENE.addPlane(str aid, str colr, num x, num y, num z, num w, num l, obj? data)
obj GAME.SCENE.addPointLight(str colr, num x, num y, num z, num distance, num decay, num intensity, bool castShadow)
obj GAME.SCENE.addRectLight(str colr, num x, num y, num z, num w, num l, num intensity)
obj GAME.SCENE.addSphere(str aid, colr, num x, num y, num z, num w, num h, num l, obj? data)
obj GAME.SCENE.addSpotLight(str colr, num x, num y, num z, num tx, num ty, num tz, num distance, num decay, num intensity, num angle, num penumbra, bool castShadow)
obj GAME.SCENE.addSprite(str aid, str colr, num x, num y, num z, num w, num h, num l, obj? data)
void GAME.SCENE.clear()
void GAME.SCENE.movObj(obj o, num x, num y, num z)
obj GAME.SCENE.posToScreen(num x, num y, num z)
void GAME.SCENE.removeSkyDome()
void GAME.SCENE.rotObj(obj o, num x, num y, num z)
void GAME.SCENE.scaleObj(obj o, num x, num y, num z)
void GAME.SCENE.setAmbientLight(str color, num intensity)
void GAME.SCENE.setFog(str colr, num distance)
void GAME.SCENE.setSkyColor(str color)
void GAME.SCENE.setSkyDome(str color1, str color2, str color3, obj? data)
void GAME.SCENE.setSkyLight(str color, num intensity, num sunAngX, num sunAngY, num distance)
void GAME.SETTINGS.set(str key, str val)
void GAME.SOUND.play2D(str aid, num vol, num rate, bool loop)
void GAME.SOUND.play3D(str aid, num vol, num x, num y, num z, num rate, bool loop)
void GAME.SOUND.stop(str aid)
void GAME.STORAGE.load(str accountName, str gameName, action callb) 
void GAME.STORAGE.set(str accountName, obj data, bool access, action callb) 
void GAME.STORAGE.transact(str accountName, obj data, bool access, action callb) 
void GAME.STORAGE.update(str accountName, obj data, bool access, action callb) 
str GAME.TIME.freeze()
str GAME.TIME.getReadable(num time)
void GAME.TIME.now()
void GAME.TIME.unfreeze()
void GAME.TRIGGERS.execute(index, ...args)
obj[] GAME.TRIGGERS.list()
str GAME.UI.addDIV(str id, bool vis, str styl, str parentId)
str GAME.UI.getDIVText(str id)
obj GAME.UI.getSize()
void GAME.UI.hideCrosshair()
void GAME.UI.hideDefault()
void GAME.UI.removeDIV(str id)
void GAME.UI.updateDIV(str id, str prop, str val)
void GAME.UI.updateDIVText(str id, str text)
obj GAME.UTILS.HEXtoRGB(str)
str GAME.UTILS.RGBtoHEX(num r, num g, num b)
num GAME.UTILS.anglDst(num x, num y)
num GAME.UTILS.getDir2D(num x, num y, num x2, num y2)
num GAME.UTILS.getDir3D(num x, num y, num z, num x2, num y2, num z2)
num GAME.UTILS.getDist2D(num x1, num y1, num x2, num y2)
num GAME.UTILS.getDist3D(num x1, num y1, num z1, num x2, num y2, num z2)
str GAME.UTILS.hexFromHue(num n)
str GAME.UTILS.invertHex(str hex)
num GAME.UTILS.math.E
num GAME.UTILS.math.PI
num GAME.UTILS.math.PIGAME
num GAME.UTILS.math.abs(num x)
num GAME.UTILS.math.acos(num x)
num GAME.UTILS.math.acosh(num x)
num GAME.UTILS.math.asin(num x)
num GAME.UTILS.math.asinh(num x)
num GAME.UTILS.math.atan(num x)
num GAME.UTILS.math.atan2(num x, num y)
num GAME.UTILS.math.atanh(num x)
num GAME.UTILS.math.calcPerc(num n, num perc)
num GAME.UTILS.math.ceil(num x)
num GAME.UTILS.math.cos(num x)
num GAME.UTILS.math.cosh(num x)
num GAME.UTILS.math.exp(num x)
num GAME.UTILS.math.floor(num x)
num GAME.UTILS.math.hypot(num ...args)
num GAME.UTILS.math.lerp(num x, num y, num z)
num GAME.UTILS.math.log(num x)
num GAME.UTILS.math.max(num ...args)
num GAME.UTILS.math.min(num ...args)
num GAME.UTILS.math.pow(num x, num y)
num GAME.UTILS.math.round(num x)
num GAME.UTILS.math.roundDecimal(num, num places)
num GAME.UTILS.math.roundToNearest(num, bool near)
num GAME.UTILS.math.sin(num x)
num GAME.UTILS.math.sinh(num x)
num GAME.UTILS.math.sqrt(num x)
num GAME.UTILS.math.tan(num x)
num GAME.UTILS.math.tanh(num x)
num GAME.UTILS.math.toDeg(num x)
num GAME.UTILS.math.toRad(num x)
num GAME.UTILS.math.trunc(num x)
num GAME.UTILS.randFloat(num min, num max)
num GAME.UTILS.randInt(num min, num max)
str GAME.UTILS.replaceText(str txt, str segm, str wit)
bool GAME.UTILS.textContains(str txt, str search)
str GAME.UTILS.toLower(str s)
str GAME.UTILS.toUpper(str s)
str GAME.UTILS.truncateTxt(str s, ln, bool noDot)
obj UTILS.HEXtoRGB(str)
str UTILS.RGBtoHEX(num r, num g, num b)
num UTILS.anglDst(num x, num y)
num UTILS.getDir2D(num x, num y, num x2, num y2)
num UTILS.getDir3D(num x, num y, num z, num x2, num y2, num z2)
num UTILS.getDist2D(num x1, num y1, num x2, num y2)
num UTILS.getDist3D(num x1, num y1, num z1, num x2, num y2, num z2)
str UTILS.hexFromHue(num n)
str UTILS.invertHex(str hex)
num UTILS.math.E
num UTILS.math.PI
num UTILS.math.PIGAME
num UTILS.math.abs(num x)
num UTILS.math.acos(num x)
num UTILS.math.acosh(num x)
num UTILS.math.asin(num x)
num UTILS.math.asinh(num x)
num UTILS.math.atan(num x)
num UTILS.math.atan2(num x, num y)
num UTILS.math.atanh(num x)
num UTILS.math.calcPerc(num n, num perc)
num UTILS.math.ceil(num x)
num UTILS.math.cos(num x)
num UTILS.math.cosh(num x)
num UTILS.math.exp(num x)
num UTILS.math.floor(num x)
num UTILS.math.hypot(num ...args)
num UTILS.math.lerp(num x, num y, num z)
num UTILS.math.log(num x)
num UTILS.math.max(num ...args)
num UTILS.math.min(num ...args)
num UTILS.math.pow(num x, num y)
num UTILS.math.round(num x)
num UTILS.math.roundDecimal(num, num places)
num UTILS.math.roundToNearest(num, bool near)
num UTILS.math.sin(num x)
num UTILS.math.sinh(num x)
num UTILS.math.sqrt(num x)
num UTILS.math.tan(num x)
num UTILS.math.tanh(num x)
num UTILS.math.toDeg(num x)
num UTILS.math.toRad(num x)
num UTILS.math.trunc(num x)
num UTILS.randFloat(num min, num max)
num UTILS.randInt(num min, num max)
str UTILS.replaceText(str txt, str segm, str wit)
bool UTILS.textContains(str txt, str search)
str UTILS.toLower(str s)
str UTILS.toUpper(str s)
str UTILS.truncateTxt(str s, ln, bool noDot)
void GAME.log(any ...args)