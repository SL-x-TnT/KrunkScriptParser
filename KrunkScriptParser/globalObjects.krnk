###**Bans player from the game _(server only)_**
###- playerId: id of player to ban
GAME.ADMIN.ban(str playerID) 

###**Kicks player from the game _(server only)_**
###- playerId: id of player to kick
GAME.ADMIN.kick(str playerID) 

###**Plays fullscreen video ad _Can only be called once every 90 seconds_**
GAME.ADS.playVideo()

###**Returns an obj[] of all AIs**
obj[] GAME.AI.list() 

###**Removes an AI from the game**
###- sid: AI sid
GAME.AI.remove(str sid) 


obj GAME.AI.spawn(str aid, str name, num x, num y, num z, obj? data) 
GAME.ANIM.playClip(obj object, str clipID, num reps)
GAME.ANIM.stopClip(obj object, str clipID)
GAME.CAMERA.attach()
GAME.CAMERA.detach()
num GAME.CAMERA.envZone
GAME.CAMERA.fov(num val)
obj GAME.CAMERA.getObj()
GAME.CAMERA.lookAt(num x, num y, num z)
GAME.CAMERA.move(num x, num y, num z)
num GAME.CAMERA.position.x
num GAME.CAMERA.position.y
num GAME.CAMERA.position.z
GAME.CAMERA.rotate(num x, num y, num z)
num GAME.CAMERA.rotation.x
num GAME.CAMERA.rotation.y
num GAME.CAMERA.rotation.z
GAME.CAMERA.shake(num amnt)
GAME.CHAT.send(str playerID, str message, str color)
bool GAME.COOKIES.has(str key) 
str GAME.COOKIES.load(str key) 
GAME.COOKIES.remove(str key) 
GAME.COOKIES.save(str key, str val) 
GAME.DEFAULT.disable3D()
GAME.DEFAULT.disablePlayerBehaviour()
GAME.DEFAULT.disablePrediction()
GAME.DEFAULT.disableServerSync()
GAME.INPUTS.disableDefault()
GAME.INPUTS.enableDefault()
GAME.INPUTS.freeMouse()
bool GAME.INPUTS.keyDown(num keyCode)
GAME.INPUTS.lockMouse()
obj GAME.INPUTS.mouseMovement()
obj GAME.INPUTS.mousePos()
obj GAME.INPUTS.mousePosOverlay()
GAME.INPUTS.unlockMouse()
GAME.MODS.load(str url)
GAME.MODS.reset()
bool GAME.NETWORK.broadcast(str id, obj data) 
bool GAME.NETWORK.send(str id, obj data, str? playerID)
obj[] GAME.OBJECTS.getPathNodes()
GAME.OVERLAY.clear() 
GAME.OVERLAY.drawCircle(num x, num y, num w, num h, num r, str color, num opac, bool? center) 
GAME.OVERLAY.drawImage(str aid, num x, num y, num w, num h, num r, num opac) 
GAME.OVERLAY.drawLine(num x1, num y1, num x2, num y2, num thickness, str color, num opac) 
GAME.OVERLAY.drawRect(num x, num y, num w, num h, num r, str color, num opac, bool? center) 
GAME.OVERLAY.drawText(str text, num x, num y, num r, num size, str align, str color, num opac) 
obj GAME.OVERLAY.getSize() 
num GAME.OVERLAY.measureText(num size, str text) 
obj GAME.OVERLAY.offset(num x, num y) 
GAME.OVERLAY.scale(num scl) 
GAME.PAYMENTS.charge() 
GAME.PAYMENTS.giveKR(str player, num val) 
bool GAME.PLATFORM.isBrowser() 
bool GAME.PLATFORM.() 
bool GAME.PLATFORM.isMobile() 
GAME.PLAYERS.disableMeshes()
obj GAME.PLAYERS.findByID(str id)
obj GAME.PLAYERS.getSelf()
obj[] GAME.PLAYERS.list()
GAME.PLAYERS.toggleLOD(num val)
obj GAME.SCENE.addAsset(str aid, num x, num y, num z, num scl, str? colr, obj? data)
obj GAME.SCENE.addCube(str aid, str colr, num x, num y, num z, num w, num h, num l, obj? data)
obj GAME.SCENE.addCustom(str aid, str colr, num[] verts, num x, num y, num z, num w, num h, num l, obj? data)
obj GAME.SCENE.addDirLight(str colr, num x, num y, num z, num tx, num ty, num tz, num intensity, bool castShadow)
obj GAME.SCENE.addPlane(str aid, str colr, num x, num y, num z, num w, num l, obj? data)
obj GAME.SCENE.addPointLight(str colr, num x, num y, num z, num distance, num decay, num intensity, bool castShadow)
obj GAME.SCENE.addRectLight(str colr, num x, num y, num z, num w, num l, num intensity)
obj GAME.SCENE.addSphere(str aid, str colr, num x, num y, num z, num w, num h, num l, obj? data)
obj GAME.SCENE.addSpotLight(str colr, num x, num y, num z, num tx, num ty, num tz, num distance, num decay, num intensity, num angle, num penumbra, bool castShadow)
obj GAME.SCENE.addSprite(str aid, str colr, num x, num y, num z, num w, num h, num l, obj? data)
GAME.SCENE.clear()
GAME.SCENE.movObj(obj o, num x, num y, num z)
obj GAME.SCENE.posToScreen(num x, num y, num z)
GAME.SCENE.removeSkyDome()
GAME.SCENE.rotObj(obj o, num x, num y, num z)
GAME.SCENE.scaleObj(obj o, num x, num y, num z)
GAME.SCENE.setAmbientLight(str color, num intensity)
GAME.SCENE.setFog(str colr, num distance)

###**Sky Color: Scene background color**
###- color: Sky color
GAME.SCENE.setSkyColor(str color)

###**Sky Dome: Scene background dome. Can be a 3 tier gradient with texture**
###- color1: Color 1
###- color2: Color 2
###- color3: Color 3
###- data: Additional data passed as an object (optional)
###- - texture: Asset Id of texture
###- - emissive: Emissive color
###- - emissiveTexture: Asset Id of emissive texture
###- - textureMoveAxis: Move axis of texture. Either 0 or 1 / "x" or "y"
###- - textureMoveSpeed: Texture move speed. Between -20 to 20
GAME.SCENE.setSkyDome(str color1, str color2, str color3, obj? data)

GAME.SCENE.setSkyLight(str color, num intensity, num sunAngX, num sunAngY, num distance)
GAME.SETTINGS.set(str key, str val)
obj GAME.SOUND.play2D(str aid, num vol, num rate, bool loop)
obj GAME.SOUND.play3D(str aid, num vol, num x, num y, num z, num rate, bool loop)
GAME.SOUND.stop(str aid)
GAME.STORAGE.load(str accountName, str gameName, action callb) 
GAME.STORAGE.set(str accountName, obj data, bool access, action callb) 
GAME.STORAGE.transact(str accountName, obj data, bool access, action callb) 
GAME.STORAGE.update(str accountName, obj data, bool access, action callb) 
str GAME.TIME.freeze()
str GAME.TIME.getReadable(num time)
num GAME.TIME.now()
GAME.TIME.unfreeze()
GAME.TRIGGERS.execute(num index, any ...args)
obj[] GAME.TRIGGERS.list()
str GAME.UI.addDIV(str id, bool vis, str styl, str? parentId)
str GAME.UI.getDIVText(str id)
obj GAME.UI.getSize()
str GAME.UI.getProp(str id, str prop)
GAME.UI.hideCrosshair()
GAME.UI.hideDefault()
GAME.UI.removeDIV(str id)
GAME.UI.updateDIV(str id, str prop, str val)
GAME.UI.updateDIVText(str id, str text)
obj GAME.UTILS.HEXtoRGB(str s)
str GAME.UTILS.RGBtoHEX(num r, num g, num b)
num GAME.UTILS.anglDst(num x, num y)
num GAME.UTILS.getDir2D(num x, num y, num x2, num y2)
num GAME.UTILS.getDir3D(num x, num y, num z, num x2, num y2, num z2)
num GAME.UTILS.getDist2D(num x1, num y1, num x2, num y2)
num GAME.UTILS.getDist3D(num x1, num y1, num z1, num x2, num y2, num z2)
str GAME.UTILS.hexFromHue(num n)
str GAME.UTILS.invertHex(str hex)
num GAME.UTILS.math.E
num GAME.UTILS.math.PI
num GAME.UTILS.math.PI2
num GAME.UTILS.math.abs(num x)
num GAME.UTILS.math.acos(num x)
num GAME.UTILS.math.acosh(num x)
num GAME.UTILS.math.asin(num x)
num GAME.UTILS.math.asinh(num x)
num GAME.UTILS.math.atan(num x)
num GAME.UTILS.math.atan2(num x, num y)
num GAME.UTILS.math.atanh(num x)
num GAME.UTILS.math.calcPerc(num n, num perc)
num GAME.UTILS.math.ceil(num x)
num GAME.UTILS.math.cos(num x)
num GAME.UTILS.math.cosh(num x)
num GAME.UTILS.math.exp(num x)
num GAME.UTILS.math.floor(num x)
num GAME.UTILS.math.hypot(num ...args)
num GAME.UTILS.math.lerp(num x, num y, num z)
num GAME.UTILS.math.log(num x)
num GAME.UTILS.math.max(num ...args)
num GAME.UTILS.math.min(num ...args)
num GAME.UTILS.math.pow(num x, num y)
num GAME.UTILS.math.round(num x)
num GAME.UTILS.math.roundDecimal(num n, num places)
num GAME.UTILS.math.roundToNearest(num n, bool near)
num GAME.UTILS.math.sin(num x)
num GAME.UTILS.math.sinh(num x)
num GAME.UTILS.math.sqrt(num x)
num GAME.UTILS.math.tan(num x)
num GAME.UTILS.math.tanh(num x)
num GAME.UTILS.math.toDeg(num x)
num GAME.UTILS.math.toRad(num x)
num GAME.UTILS.math.trunc(num x)
num GAME.UTILS.randFloat(num min, num max)
num GAME.UTILS.randInt(num min, num max)
str GAME.UTILS.replaceText(str txt, str segm, str wit)
bool GAME.UTILS.textContains(str txt, str search)
str GAME.UTILS.toLower(str s)
str GAME.UTILS.toUpper(str s)
str GAME.UTILS.truncateTxt(str s, num ln, bool noDot)
obj UTILS.HEXtoRGB(str s)
str UTILS.RGBtoHEX(num r, num g, num b)
num UTILS.anglDst(num x, num y)
num UTILS.getDir2D(num x, num y, num x2, num y2)
num UTILS.getDir3D(num x, num y, num z, num x2, num y2, num z2)
num UTILS.getDist2D(num x1, num y1, num x2, num y2)
num UTILS.getDist3D(num x1, num y1, num z1, num x2, num y2, num z2)
str UTILS.hexFromHue(num n)
str UTILS.invertHex(str hex)
num UTILS.math.E
num UTILS.math.PI
num UTILS.math.PI2
num UTILS.math.abs(num x)
num UTILS.math.acos(num x)
num UTILS.math.acosh(num x)
num UTILS.math.asin(num x)
num UTILS.math.asinh(num x)
num UTILS.math.atan(num x)
num UTILS.math.atan2(num x, num y)
num UTILS.math.atanh(num x)
num UTILS.math.calcPerc(num n, num perc)
num UTILS.math.ceil(num x)
num UTILS.math.cos(num x)
num UTILS.math.cosh(num x)
num UTILS.math.exp(num x)
num UTILS.math.floor(num x)
num UTILS.math.hypot(num ...args)
num UTILS.math.lerp(num x, num y, num z)
num UTILS.math.log(num x)
num UTILS.math.max(num ...args)
num UTILS.math.min(num ...args)
num UTILS.math.pow(num x, num y)
num UTILS.math.round(num x)
num UTILS.math.roundDecimal(num n, num places)
num UTILS.math.roundToNearest(num n, bool near)
num UTILS.math.sin(num x)
num UTILS.math.sinh(num x)
num UTILS.math.sqrt(num x)
num UTILS.math.tan(num x)
num UTILS.math.tanh(num x)
num UTILS.math.toDeg(num x)
num UTILS.math.toRad(num x)
num UTILS.math.trunc(num x)
num Math.E
num Math.PI
num Math.PI2
num Math.abs(num x)
num Math.acos(num x)
num Math.acosh(num x)
num Math.asin(num x)
num Math.asinh(num x)
num Math.atan(num x)
num Math.atan2(num x, num y)
num Math.atanh(num x)
num Math.calcPerc(num n, num perc)
num Math.ceil(num x)
num Math.cos(num x)
num Math.cosh(num x)
num Math.exp(num x)
num Math.floor(num x)
num Math.hypot(num ...args)
num Math.lerp(num x, num y, num z)
num Math.log(num x)
num Math.max(num ...args)
num Math.min(num ...args)
num Math.pow(num x, num y)
num Math.round(num x)
num Math.roundDecimal(num n, num places)
num Math.roundToNearest(num n, bool near)
num Math.sin(num x)
num Math.sinh(num x)
num Math.sqrt(num x)
num Math.tan(num x)
num Math.tanh(num x)
num Math.toDeg(num x)
num Math.toRad(num x)
num Math.trunc(num x)
num UTILS.randFloat(num min, num max)
num UTILS.randInt(num min, num max)
str UTILS.replaceText(str txt, str segm, str wit)
bool UTILS.textContains(str txt, str search)
str UTILS.toLower(str s)
str UTILS.toUpper(str s)
str UTILS.truncateTxt(str s, num ln, bool noDot)
GAME.log(any ...args)